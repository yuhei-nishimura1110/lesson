多態性とは

継承した（子クラスのオブジェクトを）親クラスにおいて呼び出すことができる機能において、あるメソッド等を呼び出したとき（作動する形は変われど）呼び出し作動することができる機能。

キャラクタークラス{
　　逃走メソッド｛
　　｝
}

勇者クラス　キャラクター継承｛
　　逃走メソッド｛
　　走って逃げる
　　｝
｝
魔術師クラス　キャラクター継承｛
　　逃走メソッド｛
　　魔法を使って逃げる
　　｝
｝



メインクラス{
キャラクタークラスの逃走メソッド実行（）
｝

としたとき勇者は走って逃げ、魔術師は魔法を使って逃げる

例
public class 花(){
    public void 咲け(){
        ......
    }
}


public class 薔薇() extends 花{
    public void 咲け(){
        ......
    }
}


public class ひまわり() extends 花{
    public void 咲け(){
        ......
    }
}


public class タンポポ() extends 花{
    public void 咲け(){
        ......
    }
}
public class main{
    public static void main(String[] args){
        花[]　flower = new 花[3];
        flower[0]=new 薔薇;
        flower[1]=new ひまわり;
　　　　flower[2]=new たんぽぽ;
　　　　for(flower fl:f){
            fl.咲け();
        }
    }
}
このように実行するとそれぞれの花の咲けメソッドが実行される
このような機能を多態性という
